{"version":3,"sources":["../src/schemative.js"],"names":["createType","type","def","propTypes","value","iterable","createFunctionType","values","array","stubArray","bool","stubTrue","func","noop","number","object","stubObject","string","stubString","symbol","Symbol","any","element","stubFalse","instanceOf","node","oneOf","oneOfType","arrayOf","objectOf","shape","createSchema","schema","PropTypes","Default","transform","bind"],"mappings":";;;;;;;AAAA;;AACA;;;;AACA;;;;AAMA,IAAMA,aAAa,SAAbA,UAAa,CAACC,IAAD,EAAOC,GAAP;AAAA,SAAgB;AACjCC,eAAW,iBAAUF,IAAV,CADsB;AAEjCG,WAAOF,GAF0B;AAGjCG,cAAU;AAHuB,GAAhB;AAAA,CAAnB;;AAMA,IAAMC,qBAAqB,SAArBA,kBAAqB,CAACL,IAAD;AAAA,SAAU,UAACM,MAAD;AAAA,WAAa;AAChDJ,iBAAW,iBAAUF,IAAV,CADqC;AAEhDG,aAAOG,MAFyC;AAGhDF,gBAAU;AAHsC,KAAb;AAAA,GAAV;AAAA,CAA3B;;AAMO,IAAMG,wBAAQR,WAAW,OAAX,EAAoB,eAAES,SAAF,EAApB,CAAd;AACA,IAAMC,sBAAOV,WAAW,MAAX,EAAmB,eAAEW,QAAF,EAAnB,CAAb;AACA,IAAMC,sBAAOZ,WAAW,MAAX,EAAmB,eAAEa,IAAF,EAAnB,CAAb;AACA,IAAMC,0BAASd,WAAW,QAAX,EAAqB,CAAC,CAAtB,CAAf;AACA,IAAMe,0BAASf,WAAW,QAAX,EAAqB,eAAEgB,UAAF,EAArB,CAAf;AACA,IAAMC,0BAASjB,WAAW,QAAX,EAAqB,eAAEkB,UAAF,EAArB,CAAf;AACA,IAAMC,0BAASnB,WAAW,QAAX,EAAqBoB,MAArB,CAAf;AACA,IAAMC,oBAAMrB,WAAW,KAAX,EAAkB,eAAEW,QAAF,EAAlB,CAAZ;AACA,IAAMW,4BAAUtB,WAAW,SAAX,EAAsB,eAAEuB,SAAF,EAAtB,CAAhB;AACA,IAAMC,kCAAaxB,WAAW,YAAX,EAAyB,eAAEuB,SAAF,EAAzB,CAAnB;AACA,IAAME,sBAAOzB,WAAW,MAAX,EAAmB,eAAEuB,SAAF,EAAnB,CAAb;AACA,IAAMG,wBAAQpB,mBAAmB,OAAnB,CAAd;AACA,IAAMqB,gCAAYrB,mBAAmB,WAAnB,CAAlB;AACA,IAAMsB,4BAAUtB,mBAAmB,SAAnB,CAAhB;AACA,IAAMuB,8BAAWvB,mBAAmB,UAAnB,CAAjB;AACA,IAAMwB,wBAAQxB,mBAAmB,OAAnB,CAAd;;AAEA,IAAMyB,sCAAe,SAAfA,YAAe,CAACC,MAAD;AAAA,SAAa;AACvCC,eAAW,8BAAgBD,MAAhB,CAD4B;AAEvCE,aAAS,4BAAcF,MAAd,CAF8B;AAGvCG,eAAW,mBAAUC,IAAV,CAAe,IAAf,EAAqBJ,MAArB;AAH4B,GAAb;AAAA,CAArB","file":"schemative.js","sourcesContent":["import { PropTypes } from 'react'\nimport _ from 'lodash/util'\nimport {\n  createPropTypes,\n  createDefault,\n  transform\n} from './parsers'\n\nconst createType = (type, def) => ({\n  propTypes: PropTypes[type],\n  value: def,\n  iterable: false\n})\n\nconst createFunctionType = (type) => (values) => ({\n  propTypes: PropTypes[type],\n  value: values,\n  iterable: true\n})\n\nexport const array = createType('array', _.stubArray())\nexport const bool = createType('bool', _.stubTrue())\nexport const func = createType('func', _.noop())\nexport const number = createType('number', -1)\nexport const object = createType('object', _.stubObject())\nexport const string = createType('string', _.stubString())\nexport const symbol = createType('symbol', Symbol)\nexport const any = createType('any', _.stubTrue())\nexport const element = createType('element', _.stubFalse())\nexport const instanceOf = createType('instanceOf', _.stubFalse())\nexport const node = createType('node', _.stubFalse())\nexport const oneOf = createFunctionType('oneOf')\nexport const oneOfType = createFunctionType('oneOfType')\nexport const arrayOf = createFunctionType('arrayOf')\nexport const objectOf = createFunctionType('objectOf')\nexport const shape = createFunctionType('shape')\n\nexport const createSchema = (schema) => ({\n  PropTypes: createPropTypes(schema),\n  Default: createDefault(schema),\n  transform: transform.bind(null, schema)\n})\n"]}