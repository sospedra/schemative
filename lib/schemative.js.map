{"version":3,"sources":["../src/schemative.js"],"names":["_react","require","_lodash","createType","type","def","propTypes","PropTypes","value","iterable","createFunctionType","values","array","_lodash2","default","stubArray","bool","stubTrue","func","noop","number","object","stubObject","string","stubString","symbol","Symbol","any","element","stubFalse","instanceOf","node","oneOf","oneOfType","arrayOf","objectOf","shape","createSchemaByObject","schema","attr","entries","reduce","memo","_ref","_ref2","_slicedToArray","key","selectRecursiveStrategy","createSchemaByArray","map","nestedSchema","isArray","createPropTypes","createDefault","filterByKeys","candidate","keys","intersection","pick","transform","attributes","Object","assign","_defineProperty","isFunction","createSchema","Default","bind"],"mappings":"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","file":"lib/schemative.js","sourcesContent":["import { PropTypes } from 'react'\nimport _ from 'lodash'\n\nconst createType = (type, def) => ({\n  propTypes: PropTypes[type],\n  value: def,\n  iterable: false\n})\n\nconst createFunctionType = (type) => (values) => ({\n  propTypes: PropTypes[type](values),\n  value: values,\n  iterable: true\n})\n\nexport const array = createType('array', _.stubArray())\nexport const bool = createType('bool', _.stubTrue())\nexport const func = createType('func', _.noop())\nexport const number = createType('number', -1)\nexport const object = createType('object', _.stubObject())\nexport const string = createType('string', _.stubString())\nexport const symbol = createType('symbol', Symbol)\nexport const any = createType('any', _.stubTrue())\nexport const element = createType('element', _.stubFalse())\nexport const instanceOf = createType('instanceOf', _.stubFalse())\nexport const node = createType('node', _.stubFalse())\nexport const oneOf = createFunctionType('oneOf')\nexport const oneOfType = createFunctionType('oneOfType')\nexport const arrayOf = createFunctionType('arrayOf')\nexport const objectOf = createFunctionType('objectOf')\nexport const shape = createFunctionType('shape')\n\nexport const createSchemaByObject = (schema, attr) => {\n  return _.entries(schema)\n    .reduce((memo, [key, value]) => {\n      memo[key] = value.iterable\n        ? selectRecursiveStrategy(value.value, attr)\n        : value[attr]\n      return memo\n    }, {})\n}\n\nexport const createSchemaByArray = (schema, attr) => {\n  return _.map(schema, (values) => {\n    return values.iterable\n      ? selectRecursiveStrategy(values.value, attr)\n      : values[attr]\n  })\n}\n\nexport const selectRecursiveStrategy = (nestedSchema, attr) => {\n  return _.isArray(nestedSchema)\n    ? createSchemaByArray(nestedSchema, attr)\n    : createSchemaByObject(nestedSchema, attr)\n}\n\nexport const createPropTypes = (schema) => {\n  return createSchemaByObject(schema, 'propTypes')\n}\n\nexport const createDefault = (schema) => {\n  return createSchemaByObject(schema, 'value')\n}\n\nexport const filterByKeys = (schema, candidate) => {\n  const keys = _.intersection(_.keys(schema), _.keys(candidate))\n  return _.pick(candidate, keys)\n}\n\nexport const transform = (schema, candidate, attributes) => Object.assign(\n  filterByKeys(schema, candidate),\n  _.reduce(attributes, (memo, value, key) => Object.assign(\n    memo,\n    {\n      [key]: _.isFunction(value) ? value(candidate) : value\n    }\n  ), {})\n)\n\nexport const createSchema = (schema) => ({\n  PropTypes: createPropTypes(schema),\n  Default: createDefault(schema),\n  transform: transform.bind(null, schema)\n})\n"]}