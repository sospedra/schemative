{"version":3,"sources":["../src/types.js"],"names":["EXPOSED_PROPERTIES","evaluateValueType","candidate","fallback","scalar","console","warn","createType","value","base","defaultValue","type","isRequired","__required__","createTypeBase","properties","memo","property","includes","get","Object","defineProperties","propType","createTypeWithDefault","getOwnPropertyNames","forEach","defineProperty","any","array","bool","element","func","number","object","shape","string","symbol","Symbol"],"mappings":"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","file":"types.js","sourcesContent":["import { assign, reduce, noop } from 'lodash'\nimport PropTypes from 'prop-types'\n\nconst EXPOSED_PROPERTIES = ['value']\n\n/**\n * Trigger a warning when assigning a value which does not\n * fit with the provided scalar.\n * Return default value.\n *\n * @param  {Any} candidate\n * @param  {Any} fallback\n * @param  {String} scalar\n * @return {Any}\n */\nconst evaluateValueType = (candidate, fallback, scalar) => {\n  if (scalar !== 'any' && typeof candidate !== typeof fallback) {\n    console.warn(\n      'Evalute Schemative type expected',\n      typeof fallback, 'but receive', typeof candidate,\n      'when', candidate, 'value was set.',\n      'Default value is returned instead.'\n    )\n\n    return fallback\n  }\n\n  return candidate\n}\n\n/**\n * Given a value, type base and default value creates an Schemative type.\n * Create the object with the type definition.\n * Pick all the properties that goes to the prototype.\n * Add the properties to an object containing the type exposed values.\n *\n * @param  {Any} value        - Selected value\n * @param  {Object} base      - Contains basic type's data\n *   @param  {String} scalar    - Type name\n *   @param  {Func} propTypes   - React PropTypes equivalent\n * @param  {Any} defaultValue - Default type value\n * @return {Object}           - Type\n */\nconst createType = (value, base, defaultValue) => {\n  const type = assign({}, base, {\n    isRequired: !base.__required__ &&\n      createType(value, createTypeBase(base, true), defaultValue)\n  })\n  const properties = reduce(type, (memo, value, property) => {\n    if (EXPOSED_PROPERTIES.includes(property)) return memo\n\n    return assign({}, memo, {\n      [property]: { get: () => value }\n    })\n  }, {})\n\n  return Object.defineProperties({\n    value: evaluateValueType(value, defaultValue, base.scalar)\n  }, properties)\n}\n\nconst createTypeBase = (base, isRequired) => {\n  const propType = PropTypes[base.scalar]\n\n  return {\n    ...base,\n    __required__: !!isRequired,\n    propType: isRequired ? propType.isRequired : propType,\n    scalar: base.scalar\n  }\n}\n\nconst createTypeWithDefault = (scalar, defaultValue) => {\n  const base = createType(defaultValue, createTypeBase({ scalar }), defaultValue)\n  const type = (value) => createType(value, base, defaultValue)\n\n  Object.getOwnPropertyNames(base).forEach((property) => {\n    if (EXPOSED_PROPERTIES.includes(property)) {\n      type[property] = base[property]\n    } else {\n      Object.defineProperty(type, property, {\n        get: () => base[property]\n      })\n    }\n  })\n\n  return type\n}\n\nexport const any = createTypeWithDefault('any', true)\nexport const array = createTypeWithDefault('array', [])\nexport const bool = createTypeWithDefault('bool', true)\nexport const element = createTypeWithDefault('element', noop)\nexport const func = createTypeWithDefault('func', noop)\nexport const number = createTypeWithDefault('number', 0)\nexport const object = createTypeWithDefault('object', {})\nexport const shape = createTypeWithDefault('shape', {})\nexport const string = createTypeWithDefault('string', '')\nexport const symbol = createTypeWithDefault('symbol', Symbol(''))\n"]}