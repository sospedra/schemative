{"version":3,"sources":["../src/parsers.js"],"names":["getPropType","prop","attr","iterable","recursiveValues","recursiveObject","values","reduce","memo","key","Object","assign","recursiveArray","map","selectRecursiveStrategy","isArray","type","exec","identity","createPropTypes","definition","createDefault","filterByKeys","candidate","keys","intersection","pick","transform","mutators","value","isFunction"],"mappings":";;;;;;;AAAA;;;;;;;;AAEO,IAAMA,oCAAc,SAAdA,WAAc,CAACC,IAAD,EAAOC,IAAP,EAAgB;AACzC,SAAOD,KAAKE,QAAL,GACHC,gBAAgBH,IAAhB,EAAsBC,IAAtB,CADG,GAEHD,KAAKC,IAAL,CAFJ;AAGD,CAJM;;AAMA,IAAMG,4CAAkB,SAAlBA,eAAkB,CAACC,MAAD,EAASJ,IAAT,EAAkB;AAC/C,SAAO,iBAAEK,MAAF,CAASD,MAAT,EAAiB,UAACE,IAAD,EAAOP,IAAP,EAAaQ,GAAb;AAAA,WAAqBC,OAAOC,MAAP,qBAC1CF,GAD0C,EACpCT,YAAYC,IAAZ,EAAkBC,IAAlB,CADoC,GAE1CM,IAF0C,CAArB;AAAA,GAAjB,EAEG,EAFH,CAAP;AAGD,CAJM;;AAMA,IAAMI,0CAAiB,SAAjBA,cAAiB,CAACN,MAAD,EAASJ,IAAT,EAAkB;AAC9C,SAAO,iBAAEW,GAAF,CAAMP,MAAN,EAAc,UAACL,IAAD,EAAU;AAC7B,WAAOD,YAAYC,IAAZ,EAAkBC,IAAlB,CAAP;AACD,GAFM,CAAP;AAGD,CAJM;;AAMA,IAAMY,4DAA0B,SAA1BA,uBAA0B,CAACR,MAAD,EAASJ,IAAT,EAAkB;AACvD,SAAO,iBAAEa,OAAF,CAAUT,MAAV,IACHM,eAAeN,MAAf,EAAuBJ,IAAvB,CADG,GAEHG,gBAAgBC,MAAhB,EAAwBJ,IAAxB,CAFJ;AAGD,CAJM;;AAMA,IAAME,4CAAkB,SAAlBA,eAAkB,OAAmBF,IAAnB,EAA4B;AAAA,MAAzBc,IAAyB,QAAzBA,IAAyB;AAAA,MAAnBV,MAAmB,QAAnBA,MAAmB;;AACzD,MAAMW,OAAOf,SAAS,MAAT,GAAkBc,IAAlB,GAAyB,iBAAEE,QAAxC;AACA,SAAOD,KAAKH,wBAAwBR,MAAxB,EAAgCJ,IAAhC,CAAL,CAAP;AACD,CAHM;;AAKA,IAAMiB,4CAAkB,SAAlBA,eAAkB,CAACC,UAAD,EAAgB;AAC7C,SAAOf,gBAAgBe,UAAhB,EAA4B,MAA5B,CAAP;AACD,CAFM;;AAIA,IAAMC,wCAAgB,SAAhBA,aAAgB,CAACD,UAAD,EAAgB;AAC3C,SAAOf,gBAAgBe,UAAhB,EAA4B,SAA5B,CAAP;AACD,CAFM;;AAIA,IAAME,sCAAe,SAAfA,YAAe,CAACF,UAAD,EAAaG,SAAb,EAA2B;AACrD,MAAMC,OAAO,iBAAEC,YAAF,CAAe,iBAAED,IAAF,CAAOJ,UAAP,CAAf,EAAmC,iBAAEI,IAAF,CAAOD,SAAP,CAAnC,CAAb;AACA,SAAO,iBAAEG,IAAF,CAAOH,SAAP,EAAkBC,IAAlB,CAAP;AACD,CAHM;;AAKA,IAAMG,gCAAY,SAAZA,SAAY,CAACP,UAAD,EAAaG,SAAb,EAAwBK,QAAxB;AAAA,SAAqClB,OAAOC,MAAP,CAC5DW,aAAaF,UAAb,EAAyBG,SAAzB,CAD4D,EAE5D,iBAAEhB,MAAF,CAASqB,QAAT,EAAmB,UAACpB,IAAD,EAAOqB,KAAP,EAAcpB,GAAd;AAAA;;AAAA,WAAsBC,OAAOC,MAAP,yDACtCF,GADsC,EAChC,iBAAEqB,UAAF,CAAaD,KAAb,IAAsBA,MAAMN,SAAN,CAAtB,GAAyCM,KADT,4CAEvCrB,IAFuC,oBAAtB;AAAA,GAAnB,EAGI,EAHJ,CAF4D,CAArC;AAAA,CAAlB","file":"parsers.js","sourcesContent":["import _ from 'lodash'\n\nexport const getPropType = (prop, attr) => {\n  return prop.iterable\n    ? recursiveValues(prop, attr)\n    : prop[attr]\n}\n\nexport const recursiveObject = (values, attr) => {\n  return _.reduce(values, (memo, prop, key) => Object.assign({\n    [key]: getPropType(prop, attr)\n  }, memo), {})\n}\n\nexport const recursiveArray = (values, attr) => {\n  return _.map(values, (prop) => {\n    return getPropType(prop, attr)\n  })\n}\n\nexport const selectRecursiveStrategy = (values, attr) => {\n  return _.isArray(values)\n    ? recursiveArray(values, attr)\n    : recursiveObject(values, attr)\n}\n\nexport const recursiveValues = ({ type, values }, attr) => {\n  const exec = attr === 'type' ? type : _.identity\n  return exec(selectRecursiveStrategy(values, attr))\n}\n\nexport const createPropTypes = (definition) => {\n  return recursiveObject(definition, 'type')\n}\n\nexport const createDefault = (definition) => {\n  return recursiveObject(definition, 'default')\n}\n\nexport const filterByKeys = (definition, candidate) => {\n  const keys = _.intersection(_.keys(definition), _.keys(candidate))\n  return _.pick(candidate, keys)\n}\n\nexport const transform = (definition, candidate, mutators) => Object.assign(\n  filterByKeys(definition, candidate),\n  _.reduce(mutators, (memo, value, key) => Object.assign({\n    [key]: _.isFunction(value) ? value(candidate) : value,\n    memo\n  }), {})\n)\n"]}